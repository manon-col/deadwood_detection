else if ((cumul_length > mid_length)&(mid_circ == 0)) {
mid_circ <- (circ[i-1]+circ[i])/2
}
cumul_length = cumul_length + len[i]
}
volume <- sum(to_sum)/(12*pi)
total_length <- total_length*0.01 # converting into meters
# Saving in the results file
reference <- tools::file_path_sans_ext(basename(file)) # file name
results_data <- read.csv2(results_file)
if (!(reference %in% results_data$reference)) { # to avoid duplication
row <- data.frame(reference, total_length, mid_circ, volume)
write.table(row, file=results_file,
sep=";", append = TRUE, quote = FALSE, col.names = FALSE,
row.names = FALSE)
}
}
csv_files <- list.files(pattern = "\\.csv$", full.names = TRUE)
print(csv_files)
csv_files <- setdiff(csv_files, "./results.csv") # removing the results file path
results_file <- "results.csv"
for (file in csv_files) {
wood_params(file)
}
library(readr)
# /!\ all the csv files must be in the working directory
# Creating results file if it doesn't already exist
if (!file.exists("results.csv")) {
results <- data.frame(reference = character(), total_length = numeric(),
mid_circ = numeric(), volume = numeric())
write.table(results, file = "results.csv", sep = ";", row.names = FALSE,
col.names = TRUE)
}
# Function that estimates the volume of the tree whose lengths and
# circumferences are inventoried in the csv file. Also calculates its total
# length and mid-circumference. Estimates are listed in the results file.
wood_params <- function(file) {
# Reading data, getting circumferences and lengths
data <- read.csv2(file)
circ <- data$circonference
len <- data$longueur
# Calculating the total length of the piece of wood, ignoring NA values
total_length <- sum(len, na.rm=TRUE)
# Calculating mid-length
mid_length = total_length/2
mid_circ = 0 # initialising mid-circumference
cumul_length <- 0 # initialising cumulative length
to_sum <-c() # initialising vector of volumes to be summed
for (i in c(1:(nrow(data)-1))) {
# Calculating volume by cutting the tree into successive logs, "tronc de
# c么ne" formula (note : converting centimetres into metres)
calc <- (0.01*len[i])*((0.01*circ[i])**2+(0.01*circ[i])*(0.01*circ[i+1])+
(0.01*circ[i+1])**2)
to_sum <- append(to_sum, calc)
# Determining the mid-circumference
if ((cumul_length == mid_length)&(mid_circ == 0)) {
mid_circ <- circ[i]
}
else if ((cumul_length > mid_length)&(mid_circ == 0)) {
mid_circ <- (circ[i-1]+circ[i])/2
}
cumul_length = cumul_length + len[i]
}
volume <- sum(to_sum)/(12*pi)
total_length <- total_length*0.01 # converting into meters
# Saving in the results file
reference <- tools::file_path_sans_ext(basename(file)) # file name
results_data <- read.csv2(results_file)
if (!(reference %in% results_data$reference)) { # to avoid duplication
row <- data.frame(reference, total_length, mid_circ, volume)
write.table(row, file=results_file,
sep=";", append = TRUE, quote = FALSE, col.names = FALSE,
row.names = FALSE)
}
}
csv_files <- list.files(pattern = "\\.csv$", full.names = TRUE)
print(csv_files)
csv_files <- setdiff(csv_files, "./results.csv") # removing the results file path
results_file <- "results.csv"
for (file in csv_files) {
wood_params(file)
}
library(readr)
# /!\ all the csv files must be in the working directory
# Creating results file if it doesn't already exist
if (!file.exists("results.csv")) {
results <- data.frame(reference = character(), total_length = numeric(),
mid_circ = numeric(), volume = numeric())
write.table(results, file = "results.csv", sep = ";", row.names = FALSE,
col.names = TRUE)
}
# Function that estimates the volume of the tree whose lengths and
# circumferences are inventoried in the csv file. Also calculates its total
# length and mid-circumference. Estimates are listed in the results file.
wood_params <- function(file) {
# Reading data, getting circumferences and lengths
data <- read.csv2(file)
circ <- data$circonference
len <- data$longueur
# Calculating the total length of the piece of wood, ignoring NA values
total_length <- sum(len, na.rm=TRUE)
# Calculating mid-length
mid_length = total_length/2
mid_circ = 0 # initialising mid-circumference
cumul_length <- 0 # initialising cumulative length
to_sum <-c() # initialising vector of volumes to be summed
for (i in c(1:(nrow(data)-1))) {
# Calculating volume by cutting the tree into successive logs, "tronc de
# c么ne" formula (note : converting centimetres into metres)
calc <- (0.01*len[i])*((0.01*circ[i])**2+(0.01*circ[i])*(0.01*circ[i+1])+
(0.01*circ[i+1])**2)
to_sum <- append(to_sum, calc)
# Determining the mid-circumference
if ((cumul_length == mid_length)&(mid_circ == 0)) {
mid_circ <- circ[i]
}
else if ((cumul_length > mid_length)&(mid_circ == 0)) {
mid_circ <- (circ[i-1]+circ[i])/2
}
else if ((mid_circ == 0)&(i == nrow(data)-1)) { # part. case, when 2 rows
mid_circ <- (circ[i-1]+circ[i])/2
}
cumul_length = cumul_length + len[i]
}
volume <- sum(to_sum)/(12*pi)
total_length <- total_length*0.01 # converting into meters
# Saving in the results file
reference <- tools::file_path_sans_ext(basename(file)) # file name
results_data <- read.csv2(results_file)
if (!(reference %in% results_data$reference)) { # to avoid duplication
row <- data.frame(reference, total_length, mid_circ, volume)
write.table(row, file=results_file,
sep=";", append = TRUE, quote = FALSE, col.names = FALSE,
row.names = FALSE)
}
}
csv_files <- list.files(pattern = "\\.csv$", full.names = TRUE)
csv_files <- setdiff(csv_files, "./results.csv") # removing the results file path
results_file <- "results.csv"
for (file in csv_files) {
wood_params(file)
}
library(readr)
# /!\ all the csv files must be in the working directory
# Creating results file if it doesn't already exist
if (!file.exists("results.csv")) {
results <- data.frame(reference = character(), total_length = numeric(),
mid_circ = numeric(), volume = numeric())
write.table(results, file = "results.csv", sep = ";", row.names = FALSE,
col.names = TRUE)
}
# Function that estimates the volume of the tree whose lengths and
# circumferences are inventoried in the csv file. Also calculates its total
# length and mid-circumference. Estimates are listed in the results file.
wood_params <- function(file) {
# Reading data, getting circumferences and lengths
data <- read.csv2(file)
circ <- data$circonference
len <- data$longueur
# Calculating the total length of the piece of wood, ignoring NA values
total_length <- sum(len, na.rm=TRUE)
# Calculating mid-length
mid_length = total_length/2
mid_circ = 0 # initialising mid-circumference
cumul_length <- 0 # initialising cumulative length
to_sum <-c() # initialising vector of volumes to be summed
for (i in c(1:(nrow(data)-1))) {
# Calculating volume by cutting the tree into successive logs, "tronc de
# c么ne" formula (note : converting centimetres into metres)
calc <- (0.01*len[i])*((0.01*circ[i])**2+(0.01*circ[i])*(0.01*circ[i+1])+
(0.01*circ[i+1])**2)
to_sum <- append(to_sum, calc)
# Determining the mid-circumference
if ((cumul_length == mid_length)&(mid_circ == 0)) {
mid_circ <- circ[i]
}
else if ((cumul_length > mid_length)&(mid_circ == 0)) {
mid_circ <- (circ[i-1]+circ[i])/2
}
else if ((mid_circ == 0)&(i == nrow(data)-1)) { # part. case, when 2 rows
mid_circ <- (circ[i-1]+circ[i])/2
}
cumul_length = cumul_length + len[i]
}
volume <- sum(to_sum)/(12*pi)
total_length <- total_length*0.01 # converting into meters
# Saving in the results file
reference <- tools::file_path_sans_ext(basename(file)) # file name
results_data <- read.csv2(results_file)
if (!(reference %in% results_data$reference)) { # to avoid duplication
row <- data.frame(reference, total_length, mid_circ, volume)
write.table(row, file=results_file,
sep=";", append = TRUE, quote = FALSE, col.names = FALSE,
row.names = FALSE)
}
}
csv_files <- list.files(pattern = "\\.csv$", full.names = TRUE)
csv_files <- setdiff(csv_files, "./results.csv") # removing the results file path
results_file <- "results.csv"
for (file in csv_files) {
wood_params(file)
}
library(readr)
# /!\ all the csv files must be in the working directory
# Creating results file if it doesn't already exist
if (!file.exists("results.csv")) {
results <- data.frame(reference = character(), total_length = numeric(),
mid_circ = numeric(), volume = numeric())
write.table(results, file = "results.csv", sep = ";", row.names = FALSE,
col.names = TRUE)
}
# Function that estimates the volume of the tree whose lengths and
# circumferences are inventoried in the csv file. Also calculates its total
# length and mid-circumference. Estimates are listed in the results file.
wood_params <- function(file) {
# Reading data, getting circumferences and lengths
data <- read.csv2(file)
circ <- data$circonference
len <- data$longueur
# Calculating the total length of the piece of wood, ignoring NA values
total_length <- sum(len, na.rm=TRUE)
# Calculating mid-length
mid_length = total_length/2
mid_circ = 0 # initialising mid-circumference
cumul_length <- 0 # initialising cumulative length
to_sum <-c() # initialising vector of volumes to be summed
for (i in c(1:(nrow(data)-1))) {
# Calculating volume by cutting the tree into successive logs, "tronc de
# c么ne" formula (note : converting centimetres into metres)
calc <- (0.01*len[i])*((0.01*circ[i])**2+(0.01*circ[i])*(0.01*circ[i+1])+
(0.01*circ[i+1])**2)
to_sum <- append(to_sum, calc)
# Determining the mid-circumference
if ((cumul_length == mid_length)&(mid_circ == 0)) {
mid_circ <- circ[i]
}
else if ((cumul_length > mid_length)&(mid_circ == 0)) {
mid_circ <- (circ[i-1]+circ[i])/2
}
else if ((mid_circ == 0)&(i == nrow(data)-1)) { # part. case, when 2 rows
mid_circ <- (circ[i-1]+circ[i])/2
}
cumul_length = cumul_length + len[i]
}
volume <- sum(to_sum)/(12*pi)
total_length <- total_length*0.01 # converting into meters
# Saving in the results file
reference <- tools::file_path_sans_ext(basename(file)) # file name
results_data <- read.csv2(results_file)
if (!(reference %in% results_data$reference)) { # to avoid duplication
print(reference)
print(total_length)
print(mid_circ)
print(volume)
row <- data.frame(reference, total_length, mid_circ, volume)
write.table(row, file=results_file, sep=";", append = TRUE, quote = FALSE,
col.names = FALSE, row.names = FALSE)
}
}
csv_files <- list.files(pattern = "\\.csv$", full.names = TRUE)
csv_files <- setdiff(csv_files, "./results.csv") # removing the results file path
results_file <- "results.csv"
for (file in csv_files) {
wood_params(file)
}
library(readr)
# /!\ all the csv files must be in the working directory
# Creating results file if it doesn't already exist
if (!file.exists("results.csv")) {
results <- data.frame(reference = character(), total_length = numeric(),
mid_circ = numeric(), volume = numeric())
write.table(results, file = "results.csv", sep = ";", row.names = FALSE,
col.names = TRUE)
}
# Function that estimates the volume of the tree whose lengths and
# circumferences are inventoried in the csv file. Also calculates its total
# length and mid-circumference. Estimates are listed in the results file.
wood_params <- function(file) {
# Reading data, getting circumferences and lengths
data <- read.csv2(file)
circ <- data$circonference
len <- data$longueur
# Calculating the total length of the piece of wood, ignoring NA values
total_length <- sum(len, na.rm=TRUE)
# Calculating mid-length
mid_length = total_length/2
mid_circ = 0 # initialising mid-circumference
cumul_length <- 0 # initialising cumulative length
to_sum <-c() # initialising vector of volumes to be summed
for (i in c(1:(nrow(data)-1))) {
# Calculating volume by cutting the tree into successive logs, "tronc de
# c么ne" formula (note : converting centimetres into metres)
calc <- (0.01*len[i])*((0.01*circ[i])**2+(0.01*circ[i])*(0.01*circ[i+1])+
(0.01*circ[i+1])**2)
to_sum <- append(to_sum, calc)
# Determining the mid-circumference
if ((cumul_length == mid_length)&(mid_circ == 0)) {
mid_circ <- circ[i]
}
else if ((cumul_length > mid_length)&(mid_circ == 0)) {
mid_circ <- (circ[i-1]+circ[i])/2
}
else if ((mid_circ == 0)&(i == (nrow(data)-1))) { # part. case, when 2 rows
mid_circ <- (circ[i-1]+circ[i])/2
}
cumul_length = cumul_length + len[i]
}
volume <- sum(to_sum)/(12*pi)
total_length <- total_length*0.01 # converting into meters
# Saving in the results file
reference <- tools::file_path_sans_ext(basename(file)) # file name
results_data <- read.csv2(results_file)
if (!(reference %in% results_data$reference)) { # to avoid duplication
print(reference)
print(total_length)
print(mid_circ)
print(volume)
row <- data.frame(reference, total_length, mid_circ, volume)
write.table(row, file=results_file, sep=";", append = TRUE, quote = FALSE,
col.names = FALSE, row.names = FALSE)
}
}
csv_files <- list.files(pattern = "\\.csv$", full.names = TRUE)
csv_files <- setdiff(csv_files, "./results.csv") # removing the results file path
results_file <- "results.csv"
for (file in csv_files) {
wood_params(file)
}
c(1:1)
library(readr)
# /!\ all the csv files must be in the working directory
# Creating results file if it doesn't already exist
if (!file.exists("results.csv")) {
results <- data.frame(reference = character(), total_length = numeric(),
mid_circ = numeric(), volume = numeric())
write.table(results, file = "results.csv", sep = ";", row.names = FALSE,
col.names = TRUE)
}
# Function that estimates the volume of the tree whose lengths and
# circumferences are inventoried in the csv file. Also calculates its total
# length and mid-circumference. Estimates are listed in the results file.
wood_params <- function(file) {
# Reading data, getting circumferences and lengths
data <- read.csv2(file)
circ <- data$circonference
len <- data$longueur
# Calculating the total length of the piece of wood, ignoring NA values
total_length <- sum(len, na.rm=TRUE)
# Calculating mid-length
mid_length = total_length/2
mid_circ = 0 # initialising mid-circumference
cumul_length <- 0 # initialising cumulative length
to_sum <-c() # initialising vector of volumes to be summed
for (i in c(1:(nrow(data)-1))) {
# Calculating volume by cutting the tree into successive logs, "tronc de
# c么ne" formula (note : converting centimetres into metres)
calc <- (0.01*len[i])*((0.01*circ[i])**2+(0.01*circ[i])*(0.01*circ[i+1])+
(0.01*circ[i+1])**2)
to_sum <- append(to_sum, calc)
# Determining the mid-circumference
if ((cumul_length == mid_length)&(mid_circ == 0)) {
mid_circ <- circ[i]
}
else if ((cumul_length > mid_length)&(mid_circ == 0)) {
mid_circ <- (circ[i-1]+circ[i])/2
}
else if ((mid_circ == 0)&(i == (nrow(data)-1))) { # part. case, when 2 rows
mid_circ <- (circ[i]+circ[i+1])/2
}
cumul_length = cumul_length + len[i]
}
volume <- sum(to_sum)/(12*pi)
total_length <- total_length*0.01 # converting into meters
# Saving in the results file
reference <- tools::file_path_sans_ext(basename(file)) # file name
results_data <- read.csv2(results_file)
if (!(reference %in% results_data$reference)) { # to avoid duplication
print(reference)
print(total_length)
print(mid_circ)
print(volume)
row <- data.frame(reference, total_length, mid_circ, volume)
write.table(row, file=results_file, sep=";", append = TRUE, quote = FALSE,
col.names = FALSE, row.names = FALSE)
}
}
csv_files <- list.files(pattern = "\\.csv$", full.names = TRUE)
csv_files <- setdiff(csv_files, "./results.csv") # removing the results file path
results_file <- "results.csv"
for (file in csv_files) {
wood_params(file)
}
library(readr)
# /!\ all the csv files must be in the working directory
# Creating results file if it doesn't already exist
if (!file.exists("results.csv")) {
results <- data.frame(reference = character(), total_length = numeric(),
mid_circ = numeric(), volume = numeric())
write.table(results, file = "results.csv", sep = ";", row.names = FALSE,
col.names = TRUE)
}
# Function that estimates the volume of the tree whose lengths and
# circumferences are inventoried in the csv file. Also calculates its total
# length and mid-circumference. Estimates are listed in the results file.
wood_params <- function(file) {
# Reading data, getting circumferences and lengths
data <- read.csv2(file)
circ <- data$circonference
len <- data$longueur
# Calculating the total length of the piece of wood, ignoring NA values
total_length <- sum(len, na.rm=TRUE)
# Calculating mid-length
mid_length = total_length/2
mid_circ = 0 # initialising mid-circumference
cumul_length <- 0 # initialising cumulative length
to_sum <-c() # initialising vector of volumes to be summed
for (i in c(1:(nrow(data)-1))) {
# Calculating volume by cutting the tree into successive logs, "tronc de
# c么ne" formula (note : converting centimetres into metres)
calc <- (0.01*len[i])*((0.01*circ[i])**2+(0.01*circ[i])*(0.01*circ[i+1])+
(0.01*circ[i+1])**2)
to_sum <- append(to_sum, calc)
# Determining the mid-circumference
if ((cumul_length == mid_length)&(mid_circ == 0)) {
mid_circ <- circ[i]
}
else if ((cumul_length > mid_length)&(mid_circ == 0)) {
mid_circ <- (circ[i-1]+circ[i])/2
}
else if ((mid_circ == 0)&(i == (nrow(data)-1))) { # part. case, when 1-2 rows
mid_circ <- (circ[i]+circ[i+1])/2
}
cumul_length = cumul_length + len[i]
}
volume <- sum(to_sum)/(12*pi)
total_length <- total_length*0.01 # converting into metres
# Saving in the results file
reference <- tools::file_path_sans_ext(basename(file)) # file name
results_data <- read.csv2(results_file)
if (!(reference %in% results_data$reference)) { # to avoid duplication
row <- data.frame(reference, total_length, mid_circ, volume)
write.table(row, file=results_file, sep=";", append = TRUE, quote = FALSE,
col.names = FALSE, row.names = FALSE)
}
}
# Listing all csv files paths
csv_files <- list.files(pattern = "\\.csv$", full.names = TRUE)
csv_files <- setdiff(csv_files, "./results.csv") # removing the results file path
results_file <- "results.csv"
for (file in csv_files) {
wood_params(file)
}
library(readr)
# /!\ all the csv files must be in the working directory
# Creating results file if it doesn't already exist
if (!file.exists("results.csv")) {
results <- data.frame(reference = character(), total_length = numeric(),
mid_circ = numeric(), volume = numeric())
write.table(results, file = "results.csv", sep = ";", row.names = FALSE,
col.names = TRUE)
}
# Function that estimates the volume of the tree whose lengths and
# circumferences are inventoried in the csv file. Also calculates its total
# length and mid-circumference. Estimates are listed in the results file.
wood_params <- function(file) {
# Reading data, getting circumferences and lengths
data <- read.csv2(file)
circ <- data$circonference
len <- data$longueur
# Calculating the total length of the piece of wood, ignoring NA values
total_length <- sum(len, na.rm=TRUE)
# Calculating mid-length
mid_length = total_length/2
mid_circ = 0 # initialising mid-circumference
cumul_length <- 0 # initialising cumulative length
to_sum <-c() # initialising vector of volumes to be summed
for (i in c(1:(nrow(data)-1))) {
# Calculating volume by cutting the tree into successive logs, "tronc de
# c么ne" formula (note : converting centimetres into metres)
calc <- (0.01*len[i])*((0.01*circ[i])**2+(0.01*circ[i])*(0.01*circ[i+1])+
(0.01*circ[i+1])**2)
to_sum <- append(to_sum, calc)
# Determining the mid-circumference
if ((cumul_length == mid_length)&(mid_circ == 0)) {
mid_circ <- circ[i]
}
else if ((cumul_length > mid_length)&(mid_circ == 0)) {
mid_circ <- (circ[i-1]+circ[i])/2
}
else if ((mid_circ == 0)&(i == (nrow(data)-1))) { # part. case, when 1-2 rows
mid_circ <- (circ[i]+circ[i+1])/2
}
cumul_length = cumul_length + len[i]
}
volume <- sum(to_sum)/(12*pi)
total_length <- total_length*0.01 # converting into metres
# Saving in the results file
reference <- tools::file_path_sans_ext(basename(file)) # file name
results_data <- read.csv2(results_file)
if (!(reference %in% results_data$reference)) { # to avoid duplication
row <- data.frame(reference, total_length, mid_circ, volume)
write.table(row, file=results_file, sep=";", append = TRUE, quote = FALSE,
col.names = FALSE, row.names = FALSE)
}
}
# Listing all csv files paths
csv_files <- list.files(pattern = "\\.csv$", full.names = TRUE)
csv_files <- setdiff(csv_files, "./results.csv") # removing the results file path
results_file <- "results.csv"
for (file in csv_files) {
wood_params(file)
}
